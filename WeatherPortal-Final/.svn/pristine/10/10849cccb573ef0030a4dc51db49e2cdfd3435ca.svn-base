using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using WeatherApi;
using WeatherPortal.Models;
using WeatherUndergroundAdapter;
using WeatherUndergroundApi;

namespace WeatherPortal.Controllers
{
    public class HomeController : Controller
    {

        public HomeController(IWeatherClient weatherClient)
        {
            this.injectedWeatherClient = weatherClient;
        }


        private IWeatherClient injectedWeatherClient;


        public ActionResult Index(String zipCode = null)
        {
            if (String.IsNullOrWhiteSpace(zipCode))
                zipCode = "52242";


            WeatherUndergroundClient weatherClient = new WeatherUndergroundClient();
            CurrentConditionsResponse currentConditions = weatherClient.GetCurrentConditions(zipCode);

            HomeIndexModel model = new HomeIndexModel() { WeatherData = currentConditions };

            return View(model);
        }


        /// <summary>
        /// Controller action developed using the the Bridge design pattern to get its data
        /// </summary>
        /// <remarks>
        /// This controller is programmed against the interface IWeatherClient, so it avoids the direct
        /// dependency on a third party interface.  
        /// </remarks>
        /// <param name="zipCode">A String of the zip code to get the weather for</param>
        /// <returns></returns>
        public ActionResult BridgePattern(String zipCode = null)
        {
            if (String.IsNullOrWhiteSpace(zipCode))
                zipCode = "52242";

            IWeatherClient weatherClient = new WeatherUndergroundDriver();
            CurrentConditions currentConditions = weatherClient.GetCurrentConditions(zipCode);

            BridgePatternModel model = new BridgePatternModel() { WeatherData = currentConditions };

            return View(model);
        }






        public ActionResult About()
        {
            ViewBag.Message = "Your application description page.";

            return View();
        }

        public ActionResult Contact()
        {
            ViewBag.Message = "Your contact page.";

            return View();
        }
    }
}